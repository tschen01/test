{"version":3,"sources":["Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["Joke","this","props","votes","className","onClick","upvote","style","borderColor","getColor","downvote","text","Component","JokeList","state","numberOfJokes","jokes","loading","value","joke","handleChange","bind","handleSubmit","seenJokes","Set","map","j","handleClick","refreshClick","length","getJokes","event","setState","target","preventDefault","axios","get","headers","Accept","res","splice","newJoke","data","push","id","uuid","st","window","localStorage","setItem","JSON","stringify","alert","numOfJokes","has","console","log","delta","getJokes2","sort","a","b","onSubmit","class","type","onChange","key","handleVote","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e4da0ed8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Joke.css\";\r\n\r\nexport default class Joke extends Component {\r\n  getColor() {\r\n    if (this.props.votes >= 15) {\r\n      return \"#4CAF50\";\r\n    } else if (this.props.votes >= 12) {\r\n      return \"#8BC34A\";\r\n    } else if (this.props.votes >= 9) {\r\n      return \"#CDDC39\";\r\n    } else if (this.props.votes >= 6) {\r\n      return \"#FFEB3B\";\r\n    } else if (this.props.votes >= 3) {\r\n      return \"#FFC107\";\r\n    } else if (this.props.votes > 0) {\r\n      return \"#FF9800\";\r\n    } else if (this.props.votes === 0) {\r\n      return \"#eeeeee\";\r\n    } else {\r\n      return \"#f44336\";\r\n    }\r\n  }\r\n\r\n  getEmoji() {\r\n    if (this.props.votes >= 15) {\r\n      return \"em em-rolling_on_the_floor_laughing\";\r\n    } else if (this.props.votes >= 12) {\r\n      return \"em em-laughing\";\r\n    } else if (this.props.votes >= 9) {\r\n      return \"em em-face_with_hand_over_mouth\";\r\n    } else if (this.props.votes >= 6) {\r\n      return \"em em-smiley\";\r\n    } else if (this.props.votes >= 3) {\r\n      return \"em em-slightly_smiling_face\";\r\n    } else if (this.props.votes > 0) {\r\n      return \"em em-slightly_smiling_face\";\r\n    } else if (this.props.votes === 0) {\r\n      return \"em em-neutral_face\";\r\n    } else {\r\n      return \"em em-face_with_rolling_eyes\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Joke\">\r\n        <div className=\"Joke-buttons\">\r\n          <i className=\"fas fa-arrow-up\" onClick={this.props.upvote}></i>\r\n          <span className=\"Joke-votes\" style={{ borderColor: this.getColor() }}>\r\n            {this.props.votes}\r\n          </span>\r\n          <i className=\"fas fa-arrow-down\" onClick={this.props.downvote}></i>\r\n        </div>\r\n        <div className=\"Joke-text\">{this.props.text}</div>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./JokeList.css\";\r\nimport uuid from \"uuid/v4\";\r\nimport Joke from \"./Joke\";\r\n\r\nexport default class JokeList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numberOfJokes: 10,\r\n      jokes: [],\r\n      loading: false,\r\n      value: '',\r\n      joke: 'default'\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.seenJokes = new Set(this.state.jokes.map(j => j.text));\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.refreshClick = this.refreshClick.bind(this);\r\n  \r\n  \r\n  }\r\n\r\n  setSingleJoke(state) {\r\n    //alert(state);\r\n    this.state.joke = state;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.jokes.length === 0) {\r\n      this.getJokes();\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    //alert('Are you sure you want to add ' + this.state.value + \" JOKES?\");\r\n    event.preventDefault();\r\n  }\r\n\r\n  async getJokes2(){\r\n    try{\r\n      // this.state.jokes = [];\r\n      let jokes = [];\r\n      let res = await axios.get(\"https://icanhazdadjoke.com/\", {\r\n          headers: { Accept: \"application/json\" }\r\n        })\r\n        // (\"setSingleJoke\", res);\r\n       // this.setSingleJoke(res.data.joke);\r\n       // alert(res.data.joke);\r\n       this.state.jokes.splice(0,1);\r\n       let newJoke = res.data.joke;\r\n       jokes.push({ id: uuid(), text: newJoke, votes: 0 });\r\n       \r\n      //  while (this.state.jokes > this.state.numberOfJokes) {\r\n      //   //Loads joke API\r\n      //   jokes.splice(0,1);\r\n      // }\r\n        this.setState(\r\n          st => ({\r\n            jokes: [...st.jokes, ...jokes],\r\n            loading: false\r\n          }),\r\n          () =>\r\n            window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\r\n        );\r\n      } catch (e) {\r\n        alert(e);\r\n        this.setState({ loading: false });\r\n      }\r\n    }\r\n  \r\n  async getJokes() {\r\n    try {\r\n      this.state.jokes = [];\r\n      let jokes = [];\r\n      this.state.numOfJokes = this.state.value; \r\n      while (jokes.length < this.state.numOfJokes) {\r\n        //Loads joke API\r\n        let res = await axios.get(\"https://icanhazdadjoke.com/\", {\r\n          headers: { Accept: \"application/json\" }\r\n        });\r\n\r\n        let newJoke = res.data.joke;\r\n        if (!this.seenJokes.has(newJoke)) {\r\n          jokes.push({ id: uuid(), text: newJoke, votes: 0 });\r\n        } else {\r\n          console.log(\"Found a duplicate!\");\r\n          console.log(newJoke);\r\n        }\r\n      }\r\n      this.setState(\r\n        st => ({\r\n          jokes: [...st.jokes, ...jokes],\r\n          loading: false\r\n        }),\r\n        () =>\r\n          window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\r\n      );\r\n    } catch (e) {\r\n      alert(e);\r\n      this.setState({ loading: false });\r\n    }\r\n\r\n  }\r\n\r\n  handleVote(id, delta) {\r\n    this.setState(\r\n      st => ({\r\n        jokes: st.jokes.map(j =>\r\n          j.id === id ? { ...j, votes: j.votes + delta } : j\r\n        )\r\n      }),\r\n      () =>\r\n        window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\r\n    );\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState({ loading: true }, this.getJokes);\r\n  }\r\n  refreshClick(){\r\n    this.setState({ loading: true }, this.getJokes2);\r\n  }\r\n\r\n  render() {\r\n    let jokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\r\n    return (\r\n      <div className=\"JokeList\">\r\n        <div className=\"JokeList-sidebar\">\r\n          <h1 className=\"JokeList-title\">\r\n              Jokes\r\n          </h1>\r\n          \r\n          {/* { <img src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\" /> } */}\r\n          <form onSubmit={this.handleSubmit}>\r\n        <label class = \"move\">\r\n          Number Of Jokes to Display:\r\n          <input type=\"number\" value={this.state.value} onChange={this.handleChange} />\r\n        </label>\r\n        {/* <input type=\"submit\" value=\"Submit\" /> */}\r\n        <button className=\"JokeList-btn\" onClick={this.handleClick}>\r\n            Display Jokes!\r\n          </button>\r\n      </form>\r\n\r\n        </div>\r\n\r\n        {this.state.loading ? (\r\n          <div >\r\n            <div className=\"JokeList-spinner\">\r\n              <i className=\"far fa-8x fa-laugh fa-spin\" />\r\n              <h1>Loading...</h1>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div >\r\n            {jokes.map(joke => (\r\n              <div>\r\n                <Joke\r\n                  key={joke.id}\r\n                  id={joke.id}\r\n                  text={joke.text}\r\n                  votes={joke.votes}\r\n                  upvote={() => this.handleVote(joke.id, 1)}\r\n                  downvote={() => this.handleVote(joke.id, -1)}\r\n\r\n          \r\n                />\r\n                <button className=\"JokeList-btn2\" onClick={this.refreshClick}>\r\n                  Generate Joke\r\n                </button>\r\n              </div>\r\n            ))}\r\n            \r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n    );\r\n\r\n  }\r\n}\r\n","import React from \"react\";\nimport JokeList from \"./JokeList\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <JokeList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}